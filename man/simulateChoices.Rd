% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateChoices.R
\name{simulateChoices}
\alias{simulateChoices}
\title{Simulate choices for a \code{survey} data frame}
\usage{
simulateChoices(survey, obsIDName = "obsID", ...)
}
\arguments{
\item{survey}{The choice survey data frame exported from the \code{makeSurvey()}
function.}

\item{obsIDName}{The name of the column that identifies each choice
observation. Defaults to \code{"obsID"}.}

\item{...}{One or more parameters separated by commas that define
the "true" utility model used to simulate choices for the \code{survey} data
frame. If no parameters are included, choices will be randomly assigned.}
}
\value{
Returns the \code{survey} data frame with an additional \code{choice} column
identifying the simulated choices.
}
\description{
Simulate choices for the \code{survey} data frame, either randomly or according
to a utility model defined by user-provided parameters. If providing
parameters, only the parameters provided will be used to simulate choices.
}
\examples{
\dontrun{
library(conjointTools)

# Make a design of experiment
doe <- makeDoe(
    levels = c(3, 3, 3),
    varNames = c("price", "type", "freshness"),
)

# Make a survey
survey <- makeSurvey(
    doe       = doe,  # Design of experiment
    nResp     = 1000, # Total number of respondents (upper bound)
    nAltsPerQ = 3,    # Number of alternatives per question
    nQPerResp = 6     # Number of questions per respondent
)

# Simulate random choices for the survey
data <- simulateChoices()

# Simulate choices based on a utility model with a single "price" parameter
# and two discrete parameters for both "freshness" and "type"
data <- simulateChoices(
    survey = survey,
    obsIDName = "obsID",
    price        = 0.1,
    freshness    = c(0.05, 0.1),
    type         = c(0, 0.5)
)

# Simulate choices based on a utility model with a single "price" parameter,
# two discrete, fixed parameters for "freshness", two random normal
# parameters for "type", and interaction parameters for "price" with "type"
data <- simulateChoices(
    survey = survey,
    obsIDName = "obsID",
    price        = 0.1,
    freshness    = c(0.05, 0.1),
    type         = randN(mu = c(0, 0.5), sigma = c(1, 2)),
    `price*type` = c(1, 2)
)
}
}
